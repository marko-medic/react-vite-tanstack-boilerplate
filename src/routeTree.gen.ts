/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './@routes/__root'
import { Route as LayoutRouteImport } from './@routes/Layout/route'
import { Route as HomeRouteImport } from './@routes/Home/route'
import { Route as ContactRouteImport } from './@routes/Contact/route'
import { Route as AboutRouteImport } from './@routes/About/route'
import { Route as RootIndexImport } from './@routes/root/index'
import { Route as LayoutIndexImport } from './@routes/Layout/index'
import { Route as HomeIndexImport } from './@routes/Home/index'
import { Route as ContactIndexImport } from './@routes/Contact/index'
import { Route as AboutIndexImport } from './@routes/About/index'
import { Route as LayoutLayoutImport } from './@routes/Layout/Layout'
import { Route as HomeHomeImport } from './@routes/Home/Home'
import { Route as ContactContactImport } from './@routes/Contact/Contact'
import { Route as AboutAboutImport } from './@routes/About/About'
import { Route as LayoutComponentsHeaderImport } from './@routes/Layout/components/Header'
import { Route as LayoutComponentsFooterImport } from './@routes/Layout/components/Footer'

// Create/Update Routes

const LayoutRouteRoute = LayoutRouteImport.update({
  id: '/Layout',
  path: '/Layout',
  getParentRoute: () => rootRoute,
} as any)

const HomeRouteRoute = HomeRouteImport.update({
  id: '/Home',
  path: '/Home',
  getParentRoute: () => rootRoute,
} as any)

const ContactRouteRoute = ContactRouteImport.update({
  id: '/Contact',
  path: '/Contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRouteRoute = AboutRouteImport.update({
  id: '/About',
  path: '/About',
  getParentRoute: () => rootRoute,
} as any)

const RootIndexRoute = RootIndexImport.update({
  id: '/root/',
  path: '/root/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRouteRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRouteRoute,
} as any)

const ContactIndexRoute = ContactIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ContactRouteRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AboutRouteRoute,
} as any)

const LayoutLayoutRoute = LayoutLayoutImport.update({
  id: '/Layout',
  path: '/Layout',
  getParentRoute: () => LayoutRouteRoute,
} as any)

const HomeHomeRoute = HomeHomeImport.update({
  id: '/Home',
  path: '/Home',
  getParentRoute: () => HomeRouteRoute,
} as any)

const ContactContactRoute = ContactContactImport.update({
  id: '/Contact',
  path: '/Contact',
  getParentRoute: () => ContactRouteRoute,
} as any)

const AboutAboutRoute = AboutAboutImport.update({
  id: '/About',
  path: '/About',
  getParentRoute: () => AboutRouteRoute,
} as any)

const LayoutComponentsHeaderRoute = LayoutComponentsHeaderImport.update({
  id: '/components/Header',
  path: '/components/Header',
  getParentRoute: () => LayoutRouteRoute,
} as any)

const LayoutComponentsFooterRoute = LayoutComponentsFooterImport.update({
  id: '/components/Footer',
  path: '/components/Footer',
  getParentRoute: () => LayoutRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/About': {
      id: '/About'
      path: '/About'
      fullPath: '/About'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRoute
    }
    '/Contact': {
      id: '/Contact'
      path: '/Contact'
      fullPath: '/Contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRoute
    }
    '/Home': {
      id: '/Home'
      path: '/Home'
      fullPath: '/Home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRoute
    }
    '/Layout': {
      id: '/Layout'
      path: '/Layout'
      fullPath: '/Layout'
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/About/About': {
      id: '/About/About'
      path: '/About'
      fullPath: '/About/About'
      preLoaderRoute: typeof AboutAboutImport
      parentRoute: typeof AboutRouteImport
    }
    '/Contact/Contact': {
      id: '/Contact/Contact'
      path: '/Contact'
      fullPath: '/Contact/Contact'
      preLoaderRoute: typeof ContactContactImport
      parentRoute: typeof ContactRouteImport
    }
    '/Home/Home': {
      id: '/Home/Home'
      path: '/Home'
      fullPath: '/Home/Home'
      preLoaderRoute: typeof HomeHomeImport
      parentRoute: typeof HomeRouteImport
    }
    '/Layout/Layout': {
      id: '/Layout/Layout'
      path: '/Layout'
      fullPath: '/Layout/Layout'
      preLoaderRoute: typeof LayoutLayoutImport
      parentRoute: typeof LayoutRouteImport
    }
    '/About/': {
      id: '/About/'
      path: '/'
      fullPath: '/About/'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof AboutRouteImport
    }
    '/Contact/': {
      id: '/Contact/'
      path: '/'
      fullPath: '/Contact/'
      preLoaderRoute: typeof ContactIndexImport
      parentRoute: typeof ContactRouteImport
    }
    '/Home/': {
      id: '/Home/'
      path: '/'
      fullPath: '/Home/'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof HomeRouteImport
    }
    '/Layout/': {
      id: '/Layout/'
      path: '/'
      fullPath: '/Layout/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutRouteImport
    }
    '/root/': {
      id: '/root/'
      path: '/root'
      fullPath: '/root'
      preLoaderRoute: typeof RootIndexImport
      parentRoute: typeof rootRoute
    }
    '/Layout/components/Footer': {
      id: '/Layout/components/Footer'
      path: '/components/Footer'
      fullPath: '/Layout/components/Footer'
      preLoaderRoute: typeof LayoutComponentsFooterImport
      parentRoute: typeof LayoutRouteImport
    }
    '/Layout/components/Header': {
      id: '/Layout/components/Header'
      path: '/components/Header'
      fullPath: '/Layout/components/Header'
      preLoaderRoute: typeof LayoutComponentsHeaderImport
      parentRoute: typeof LayoutRouteImport
    }
  }
}

// Create and export the route tree

interface AboutRouteRouteChildren {
  AboutAboutRoute: typeof AboutAboutRoute
  AboutIndexRoute: typeof AboutIndexRoute
}

const AboutRouteRouteChildren: AboutRouteRouteChildren = {
  AboutAboutRoute: AboutAboutRoute,
  AboutIndexRoute: AboutIndexRoute,
}

const AboutRouteRouteWithChildren = AboutRouteRoute._addFileChildren(
  AboutRouteRouteChildren,
)

interface ContactRouteRouteChildren {
  ContactContactRoute: typeof ContactContactRoute
  ContactIndexRoute: typeof ContactIndexRoute
}

const ContactRouteRouteChildren: ContactRouteRouteChildren = {
  ContactContactRoute: ContactContactRoute,
  ContactIndexRoute: ContactIndexRoute,
}

const ContactRouteRouteWithChildren = ContactRouteRoute._addFileChildren(
  ContactRouteRouteChildren,
)

interface HomeRouteRouteChildren {
  HomeHomeRoute: typeof HomeHomeRoute
  HomeIndexRoute: typeof HomeIndexRoute
}

const HomeRouteRouteChildren: HomeRouteRouteChildren = {
  HomeHomeRoute: HomeHomeRoute,
  HomeIndexRoute: HomeIndexRoute,
}

const HomeRouteRouteWithChildren = HomeRouteRoute._addFileChildren(
  HomeRouteRouteChildren,
)

interface LayoutRouteRouteChildren {
  LayoutLayoutRoute: typeof LayoutLayoutRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutComponentsFooterRoute: typeof LayoutComponentsFooterRoute
  LayoutComponentsHeaderRoute: typeof LayoutComponentsHeaderRoute
}

const LayoutRouteRouteChildren: LayoutRouteRouteChildren = {
  LayoutLayoutRoute: LayoutLayoutRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutComponentsFooterRoute: LayoutComponentsFooterRoute,
  LayoutComponentsHeaderRoute: LayoutComponentsHeaderRoute,
}

const LayoutRouteRouteWithChildren = LayoutRouteRoute._addFileChildren(
  LayoutRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/About': typeof AboutRouteRouteWithChildren
  '/Contact': typeof ContactRouteRouteWithChildren
  '/Home': typeof HomeRouteRouteWithChildren
  '/Layout': typeof LayoutRouteRouteWithChildren
  '/About/About': typeof AboutAboutRoute
  '/Contact/Contact': typeof ContactContactRoute
  '/Home/Home': typeof HomeHomeRoute
  '/Layout/Layout': typeof LayoutLayoutRoute
  '/About/': typeof AboutIndexRoute
  '/Contact/': typeof ContactIndexRoute
  '/Home/': typeof HomeIndexRoute
  '/Layout/': typeof LayoutIndexRoute
  '/root': typeof RootIndexRoute
  '/Layout/components/Footer': typeof LayoutComponentsFooterRoute
  '/Layout/components/Header': typeof LayoutComponentsHeaderRoute
}

export interface FileRoutesByTo {
  '/About/About': typeof AboutAboutRoute
  '/Contact/Contact': typeof ContactContactRoute
  '/Home/Home': typeof HomeHomeRoute
  '/Layout/Layout': typeof LayoutLayoutRoute
  '/About': typeof AboutIndexRoute
  '/Contact': typeof ContactIndexRoute
  '/Home': typeof HomeIndexRoute
  '/Layout': typeof LayoutIndexRoute
  '/root': typeof RootIndexRoute
  '/Layout/components/Footer': typeof LayoutComponentsFooterRoute
  '/Layout/components/Header': typeof LayoutComponentsHeaderRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/About': typeof AboutRouteRouteWithChildren
  '/Contact': typeof ContactRouteRouteWithChildren
  '/Home': typeof HomeRouteRouteWithChildren
  '/Layout': typeof LayoutRouteRouteWithChildren
  '/About/About': typeof AboutAboutRoute
  '/Contact/Contact': typeof ContactContactRoute
  '/Home/Home': typeof HomeHomeRoute
  '/Layout/Layout': typeof LayoutLayoutRoute
  '/About/': typeof AboutIndexRoute
  '/Contact/': typeof ContactIndexRoute
  '/Home/': typeof HomeIndexRoute
  '/Layout/': typeof LayoutIndexRoute
  '/root/': typeof RootIndexRoute
  '/Layout/components/Footer': typeof LayoutComponentsFooterRoute
  '/Layout/components/Header': typeof LayoutComponentsHeaderRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/About'
    | '/Contact'
    | '/Home'
    | '/Layout'
    | '/About/About'
    | '/Contact/Contact'
    | '/Home/Home'
    | '/Layout/Layout'
    | '/About/'
    | '/Contact/'
    | '/Home/'
    | '/Layout/'
    | '/root'
    | '/Layout/components/Footer'
    | '/Layout/components/Header'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/About/About'
    | '/Contact/Contact'
    | '/Home/Home'
    | '/Layout/Layout'
    | '/About'
    | '/Contact'
    | '/Home'
    | '/Layout'
    | '/root'
    | '/Layout/components/Footer'
    | '/Layout/components/Header'
  id:
    | '__root__'
    | '/About'
    | '/Contact'
    | '/Home'
    | '/Layout'
    | '/About/About'
    | '/Contact/Contact'
    | '/Home/Home'
    | '/Layout/Layout'
    | '/About/'
    | '/Contact/'
    | '/Home/'
    | '/Layout/'
    | '/root/'
    | '/Layout/components/Footer'
    | '/Layout/components/Header'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AboutRouteRoute: typeof AboutRouteRouteWithChildren
  ContactRouteRoute: typeof ContactRouteRouteWithChildren
  HomeRouteRoute: typeof HomeRouteRouteWithChildren
  LayoutRouteRoute: typeof LayoutRouteRouteWithChildren
  RootIndexRoute: typeof RootIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AboutRouteRoute: AboutRouteRouteWithChildren,
  ContactRouteRoute: ContactRouteRouteWithChildren,
  HomeRouteRoute: HomeRouteRouteWithChildren,
  LayoutRouteRoute: LayoutRouteRouteWithChildren,
  RootIndexRoute: RootIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.ts",
      "children": [
        "/About",
        "/Contact",
        "/Home",
        "/Layout",
        "/root/"
      ]
    },
    "/About": {
      "filePath": "About/route.ts",
      "children": [
        "/About/About",
        "/About/"
      ]
    },
    "/Contact": {
      "filePath": "Contact/route.ts",
      "children": [
        "/Contact/Contact",
        "/Contact/"
      ]
    },
    "/Home": {
      "filePath": "Home/route.ts",
      "children": [
        "/Home/Home",
        "/Home/"
      ]
    },
    "/Layout": {
      "filePath": "Layout/route.ts",
      "children": [
        "/Layout/Layout",
        "/Layout/",
        "/Layout/components/Footer",
        "/Layout/components/Header"
      ]
    },
    "/About/About": {
      "filePath": "About/About.tsx",
      "parent": "/About"
    },
    "/Contact/Contact": {
      "filePath": "Contact/Contact.tsx",
      "parent": "/Contact"
    },
    "/Home/Home": {
      "filePath": "Home/Home.tsx",
      "parent": "/Home"
    },
    "/Layout/Layout": {
      "filePath": "Layout/Layout.tsx",
      "parent": "/Layout"
    },
    "/About/": {
      "filePath": "About/index.ts",
      "parent": "/About"
    },
    "/Contact/": {
      "filePath": "Contact/index.ts",
      "parent": "/Contact"
    },
    "/Home/": {
      "filePath": "Home/index.ts",
      "parent": "/Home"
    },
    "/Layout/": {
      "filePath": "Layout/index.ts",
      "parent": "/Layout"
    },
    "/root/": {
      "filePath": "root/index.ts"
    },
    "/Layout/components/Footer": {
      "filePath": "Layout/components/Footer.tsx",
      "parent": "/Layout"
    },
    "/Layout/components/Header": {
      "filePath": "Layout/components/Header.tsx",
      "parent": "/Layout"
    }
  }
}
ROUTE_MANIFEST_END */
